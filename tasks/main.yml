---
- name: Install PHP and required extensions
  ansible.builtin.package:
    name: "{{ php_packages }}"
    state: present


- name: Ensure Rainloop directory exists
  ansible.builtin.file: 
    path: "{{ rainloop_install_dir }}"
    state: directory
    owner: "{{ rainloop_user }}"
    group: "{{ rainloop_group }}"

- name: Extract Rainloop files
  ansible.builtin.unarchive:
    src: "{{ rainloop_url }}"
    dest: "{{ rainloop_install_dir }}"
    owner: "{{ rainloop_user }}"
    group: "{{ rainloop_group }}"
    remote_src: True

# - name: Gather facts explicitly
#   ansible.builtin.setup:

# - name: Set a custom fact for Rainloop
#   ansible.builtin.set_fact:
#     rainloop_ip: "{{ ansible_default_ipv4.address }}"

- name: Trigger Rainloop interface to create _data_ directory
  ansible.builtin.uri:
    url: "http://{{ ansible_default_ipv4.address }}"
    status_code: 200
    method: GET
  register: rainloop_response

# - name: Debug Rainloop HTTP response
#   ansible.builtin.debug:
#     var: rainloop_response
  
- name: Create Rainloop domain configuration
  ansible.builtin.template:
    src: rainloop-config.j2
    dest: "{{ rainloop_domain_config_path }}/{{ rainloop_domain }}.ini"
    owner: www-data
    group: www-data
    mode: '0644'
  notify: restart apache2



# - name: Install apache2
#   tags: [install]
#   ansible.builtin.include_role:
#     name: apache2
#   vars:
#     apache2_vhosts:
#       - name: rainloop
#         aliases:
#           - mail.
#         http: true
#         https: false
#         document_root: "{{ rainloop_install_dir }}"
#         enabled: true

- name: Install apache2
  tags: [install]
  ansible.builtin.include_role:
    name: apache2


- name: Set Apache vhosts fact
  ansible.builtin.set_fact:
    apache2_vhosts:
      - name: rainloop
        aliases:
          - mail.at
        http: true
        https: false
        document_root: "{{ rainloop_install_dir }}"
        enabled: true


